
<div class="@CardClass" draggable="@this.Draggable.ToString()" @ondragstart="@(async (DragEventArgs args) => this.Parent.OnDragStart(this.CardModel))"
     ondragover="event.preventDefault();" @ondrop="@(async (DragEventArgs args) => { await this.Parent.HandleDrop(); })">

    <img src=@ImageHelper.GetCardImage(this.CardModel.Visible, this.CardModel.Suit, this.CardModel.Rank) class="card-image ">
</div>

@code {
    [Parameter] public CardModel CardModel { get; set; }
    [Parameter] public DeckBase Parent { get; set; }
    [Parameter] public bool Draggable { get; set; }
    [Parameter] public bool Droppable { get; set; }

    public string CardClass => this.CardModel.Visible ? "card" : "card-hidden";

    public string CardContent => $"{this.CardModel.Rank} of {this.CardModel.Suit}";

    public string DivClass => $"{(this.CardModel.Color == Colors.Black ? "black" : "red")} {(this.CardModel.Visible ? "" : "hidden")}";
}